server.port=6001
#spring.security.oauth2.client.registration.mywebclient.client-id=amazon-eshop
#spring.security.oauth2.client.registration.mywebclient.client-secret = 7e04d5f1-8864-456d-8138-bec10b50fe14
#spring.security.oauth2.client.registration.mywebclient.scope = openid, profile, roles
#spring.security.oauth2.client.registration.mywebclient.authorization-grant-type = authorization_code
#spring.security.oauth2.client.registration.mywebclient.redirect-uri = http://localhost:6001/login/oauth2/code/mywebclient

#spring.security.oauth2.client.provider.mywebclient.authorization-uri = http://localhost:8080/auth/realms/eshop/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.mywebclient.token-uri = http://localhost:8080/auth/realms/eshop/protocol/openid-connect/token
#spring.security.oauth2.client.provider.mywebclient.jwk-set-uri=http://localhost:8080/auth/realms/eshop/protocol/openid-connect/certs
#spring.security.oauth2.client.provider.mywebclient.user-info-uri = http://localhost:8080/auth/realms/eshop/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.mywebclient.user-name-attribute = preferred_username

#spring.security.oauth2.client.registration.google.client-id=636957710352-4okaaqlfl2pc6ibp6ofjd1q376v6g8vc.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret = xExnHGFCeDi9BywwLqksLd3u

spring.security.oauth2.client.registration.okta.client-id = 0oa1h66il5tduMdmV5d7
spring.security.oauth2.client.registration.okta.client-secret = ipybZ-I8UIxqgseKn8iqRRCrIy3S1Or6JK1-jWHa
spring.security.oauth2.client.registration.okta.scope = openid,profile
spring.security.oauth2.client.provider.okta.issuer-uri = https://dev-71018336.okta.com/oauth2/default

api.gateway.url = http://localhost:9000/
api.gateway.couponUrl = /api/status
api.gateway.connectToCouponResource = false